#include "uniform_decoding.txt"

//local - extract normal and then proceed
vec3 local = abs(in_Position);
vec3 sign = in_Position/local;
sign += vec3(1.0) - abs(sign);
out_Normal = floor(local/COMPRESSED_NORMAL_POSITION);
local = (local - COMPRESSED_NORMAL_POSITION*out_Normal)*sign;
out_Normal = out_Normal/128.0 - vec3(1.0);

//snap vertices

local *= scale;

rotate(local.xy, angle.z);
rotate(local.xz, angle.y);
rotate(local.yz, angle.x);

rotate(out_Normal.xy, angle.z);
rotate(out_Normal.xz, angle.y);
rotate(out_Normal.yz, angle.x);

//local to relative
local += offset - camera_position;

rotate(local.xy, -camera_angle.z);
rotate(local.xz, -camera_angle.y);
rotate(local.yz, -camera_angle.x);
