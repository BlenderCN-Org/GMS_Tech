surface_set_target(surfaces[MRT]);

SET_UNIFORM_I("vertex_mode", VERTEX_REGULAR)
SET_UNIFORM_I("fragment_mode", FRAGMENT_REGULAR)

texture_set_stage(uniform_sampler, surface_texture_pointers[UNIFORM_BUFFER]);
ITERATE_STATIC
{
    #include "mrt_static.txt"
}

SET_UNIFORM_I("id",UNIFORM_BUFFER_WIDTH*UNIFORM_BUFFER_WIDTH)
ITERATE_DYNAMIC
{
    #include "mrt_dynamic.txt"
}

surface_reset_target();

//#include "edge.txt"

//#include "collect_lights.txt"

//non-shadow lights (deferred omni-lights)
//#include "lighting.txt"

//shadow lights (shadow mapped spotlights)
//#include "shadowing.txt"

//#include "post_processing.txt"

SET_UNIFORM_I("vertex_mode", VERTEX_FLAT)
SET_UNIFORM_I("fragment_mode", FRAGMENT_FLAT)
surface_set_target(FINAL_SURFACE);
var scale = surface_info[MRT];
draw_surface_ext(surfaces[MRT],0,0, 1/scale[0], 1/scale[1],0,c_white,1.0);
surface_reset_target();
